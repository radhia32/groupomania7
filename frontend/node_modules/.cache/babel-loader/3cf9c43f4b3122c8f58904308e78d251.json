{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post,\n    setPosts,\n    posts\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", commentsResult);\n      setComments(commentsResult.data.result);\n    };\n\n    getComments();\n  }, []);\n  console.log(\"comments\", comments);\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), post.userId == userId && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const result = await axios.delete(\"http://localhost:4000/api/post/\" + post.postId, {\n            headers: {\n              authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n            }\n          });\n          console.log(\"result\", result);\n          const filtredPosts = posts.filter(postItem => postItem.postId !== post.postId);\n          setPosts(filtredPosts);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(commentItem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: commentItem.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [commentItem.prenom, \" \", commentItem.nom]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), commentItem.userId == userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const result = await axios.delete(\"http://localhost:4000/api/comment/\" + commentItem.commentId, {\n                headers: {\n                  authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                }\n              });\n              console.log(\"result\", result);\n              const filtredComments = comments.filter(commentElement => commentElement.commentId !== commentItem.commentId);\n              setComments(filtredComments);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [\"        \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"entrer votre commentaire\",\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !comment,\n        onClick: async () => {\n          if (comment) {\n            const newComment = await axios.post(\"http://localhost:4000/api/comment\", {\n              comment,\n              postId: post.postId\n            }, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            setComment(\"\");\n            console.log(\"newPost\", newComment.data);\n            const newAddedComment = {\n              comment,\n              commentId: newComment.data.insertId,\n              userId,\n              postId: post.postId,\n              nom: userLastName,\n              prenom: userName\n            };\n            setComments([...comments, newAddedComment]);\n          }\n        },\n        children: \"commenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"IC76t4LhS0qiplMFkfx38kLvoB8=\");\n\n_c = Post;\nexport default post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx"],"names":["React","useEffect","useState","axios","Post","post","setPosts","posts","comment","setComment","comments","setComments","getComments","commentsResult","get","postId","headers","authorization","localStorage","getItem","console","log","data","result","userId","userName","userLastName","display","description","delete","filtredPosts","filter","postItem","map","commentItem","justifyContent","prenom","nom","commentId","filtredComments","commentElement","e","target","value","newComment","newAddedComment","insertId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAmBC,IAAAA;AAAnB,GAA8B;AAE1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAG,YAAY;AAC9B,YAAMC,cAAc,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,qCAAoCT,IAAI,CAACU,MAAO,cAA3D,EAA0E;AACrGC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AAD4F,OAA1E,CAA7B;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,cAA1B;AACAF,MAAAA,WAAW,CAACE,cAAc,CAACS,IAAf,CAAoBC,MAArB,CAAX;AACD,KARD;;AASAX,IAAAA,WAAW;AACZ,GAXQ,EAWN,EAXM,CAAT;AAYFQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,QAAxB;AACE,QAAMc,MAAM,GAAGN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,QAAMM,QAAQ,GAAGP,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AACA,QAAMO,YAAY,GAAGR,YAAY,CAACC,OAAb,CAAqB,UAArB,CAArB;AACA,sBACM;AAAA,4BACA;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE;AAAA,kBAAItB,IAAI,CAACuB;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,EAEGvB,IAAI,CAACmB,MAAL,IAAeA,MAAf,iBAAyB;AAAQ,QAAA,OAAO,EAAE,YAAY;AACjD,gBAAMD,MAAM,GAAG,MAAMpB,KAAK,CAAC0B,MAAN,CACnB,oCAAoCxB,IAAI,CAACU,MADtB,EAC6B;AAAEC,YAAAA,OAAO,EAAE;AACzDC,cAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADE;AAAX,WAD7B,CAArB;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,MAAtB;AACA,gBAAMO,YAAY,GAAGvB,KAAK,CAACwB,MAAN,CAClBC,QAAD,IAAcA,QAAQ,CAACjB,MAAT,KAAoBV,IAAI,CAACU,MADpB,CAArB;AAGAT,UAAAA,QAAQ,CAACwB,YAAD,CAAR;AACD,SAZqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAkBA;AAAA,gBAECpB,QAAQ,CAACuB,GAAT,CAAcC,WAAD,IAAiB;AAC3B,4BAAO;AAAA,kCACP;AAAK,YAAA,KAAK,EAAE;AAAEP,cAAAA,OAAO,EAAE,MAAX;AAAmBQ,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACI;AAAA,wBAAID,WAAW,CAAC1B;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAI0B,WAAW,CAACE,MAAhB,OAA0BF,WAAW,CAACG,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,EAKNH,WAAW,CAACV,MAAZ,IAAsBA,MAAtB,iBAAgC;AAAQ,YAAA,OAAO,EAAE,YAAY;AAC1D,oBAAMD,MAAM,GAAG,MAAMpB,KAAK,CAAC0B,MAAN,CACnB,uCAAuCK,WAAW,CAACI,SADhC,EAC0C;AAAEtB,gBAAAA,OAAO,EAAE;AACtEC,kBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADe;AAAX,eAD1C,CAArB;AAMAC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,MAAtB;AACA,oBAAMgB,eAAe,GAAG7B,QAAQ,CAACqB,MAAT,CACrBS,cAAD,IAAoBA,cAAc,CAACF,SAAf,KAA6BJ,WAAW,CAACI,SADvC,CAAxB;AAGA3B,cAAAA,WAAW,CAAC4B,eAAD,CAAX;AACD,aAZ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAL1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAmBH,OApBA;AAFD;AAAA;AAAA;AAAA;AAAA,YAlBA,eA0CA;AAAK,MAAA,KAAK,EAAE;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,0CAAwC;AACtC,QAAA,WAAW,EAAC,0BAD0B;AAEtC,QAAA,QAAQ,EAAGc,CAAD,IAAOhC,UAAU,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV;AAFW;AAAA;AAAA;AAAA;AAAA,cAAxC,eAIA;AAAQ,QAAA,QAAQ,EAAE,CAACnC,OAAnB;AAA4B,QAAA,OAAO,EAAE,YAAY;AAC7C,cAAGA,OAAH,EAAY;AACR,kBAAMoC,UAAU,GAAE,MAAMzC,KAAK,CAACE,IAAN,CACvB,mCADuB,EAEvB;AACEG,cAAAA,OADF;AAEEO,cAAAA,MAAM,EAAEV,IAAI,CAACU;AAFf,aAFuB,EAMvB;AACEC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADX,aANuB,CAAxB;AAYDV,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAW,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBuB,UAAU,CAACtB,IAAlC;AACA,kBAAMuB,eAAe,GAAG;AAAErC,cAAAA,OAAF;AAAU8B,cAAAA,SAAS,EAAEM,UAAU,CAACtB,IAAX,CAAgBwB,QAArC;AAA8CtB,cAAAA,MAA9C;AAAuDT,cAAAA,MAAM,EAAEV,IAAI,CAACU,MAApE;AAA4EsB,cAAAA,GAAG,EAAEX,YAAjF;AAA+FU,cAAAA,MAAM,EAAEX;AAAvG,aAAxB;AAEAd,YAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcmC,eAAd,CAAD,CAAX;AAEF;AACJ,SArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAwED,CA9FD;;GAAMzC,I;;KAAAA,I;AAgGN,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Post = ({ post, setPosts , posts}) => {\n\n  const [comment, setComment] = useState(\"\");\n\n  const [comments, setComments ]= useState([]);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", commentsResult);\n      setComments(commentsResult.data.result);\n    };\n    getComments();\n  }, []);\nconsole.log(\"comments\", comments)\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  return (\n        <div>\n        <div style={{ display: 'flex'}}>\n          <p>{post.description}</p>\n          {post.userId == userId && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/post/\" + post.postId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredPosts = posts.filter(\n                  (postItem) => postItem.postId !== post.postId\n                );\n                setPosts(filtredPosts);\n              }}>delete</button>}\n          \n        </div>\n        <div>\n\n        {comments.map((commentItem) => {\n            return <div>\n            <div style={{ display: \"flex\", justifyContent: 'center'}}>\n                <p>{commentItem.comment}</p>\n                <p>{commentItem.prenom} { commentItem.nom}</p>\n            </div>\n            {commentItem.userId == userId && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/comment/\" + commentItem.commentId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredComments = comments.filter(\n                  (commentElement) => commentElement.commentId !== commentItem.commentId\n                );\n                setComments(filtredComments);\n              }}>delete</button>}\n            </div>\n        })}\n        </div>\n        <div style={{ display: 'flex'}}>        <input\n          placeholder=\"entrer votre commentaire\"\n          onChange={(e) => setComment(e.target.value)}\n        />\n        <button disabled={!comment} onClick={async () => {\n            if(comment) {\n                const newComment= await axios.post(\n                 \"http://localhost:4000/api/comment\",\n                 {\n                   comment,\n                   postId: post.postId\n                         },\n                 {\n                   headers: {\n                     authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                   }\n                 }\n               );\n               setComment(\"\")\n               console.log(\"newPost\", newComment.data); \n               const newAddedComment = { comment,commentId: newComment.data.insertId,userId , postId: post.postId, nom: userLastName, prenom: userName};\n\n               setComments([...comments, newAddedComment])\n\n            }\n        }}>commenter</button>\n        </div>\n        </div>\n  );\n};\n\nexport default post;"]},"metadata":{},"sourceType":"module"}