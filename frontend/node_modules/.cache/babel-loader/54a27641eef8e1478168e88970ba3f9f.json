{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post,\n    setPosts,\n    posts\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      setComments(commentsResult.data.result);\n    };\n\n    getComments();\n  }, []);\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), (post.userId == userId || userRole == \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const result = await axios.delete(\"http://localhost:4000/api/post/\" + post.postId, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            console.log(\"result\", result);\n            const filtredPosts = posts.filter(postItem => postItem.postId !== post.postId);\n            setPosts(filtredPosts);\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-post\",\n        src: post.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(commentItem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: commentItem.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [commentItem.prenom, \" \", commentItem.nom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), (commentItem.userId == userId || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const result = await axios.delete(\"http://localhost:4000/api/comment/\" + commentItem.commentId, {\n                headers: {\n                  authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                }\n              });\n              console.log(\"result\", result);\n              const filtredComments = comments.filter(commentElement => commentElement.commentId !== commentItem.commentId);\n              setComments(filtredComments);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs-post-commentaire\",\n        placeholder: \"entrer votre commentaire\",\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttoncommentaire\",\n        disabled: !comment,\n        onClick: async () => {\n          if (comment) {\n            const newComment = await axios.post(\"http://localhost:4000/api/comment\", {\n              comment,\n              postId: post.postId\n            }, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            setComment(\"\");\n            console.log(\"newPost\", newComment.data);\n            const newAddedComment = {\n              comment,\n              commentId: newComment.data.insertId,\n              userId,\n              postId: post.postId,\n              nom: userLastName,\n              prenom: userName\n            };\n            setComments([...comments, newAddedComment]);\n          }\n        },\n        children: \"commenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote\",\n      children: /*#__PURE__*/_jsxDEV(Aimer, {\n        postId: post.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"IC76t4LhS0qiplMFkfx38kLvoB8=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx"],"names":["React","useEffect","useState","axios","Aimer","Post","post","setPosts","posts","comment","setComment","comments","setComments","getComments","commentsResult","get","postId","headers","authorization","localStorage","getItem","data","result","userId","userName","userLastName","userRole","description","delete","console","log","filtredPosts","filter","postItem","image","map","commentItem","prenom","nom","commentId","filtredComments","commentElement","e","target","value","newComment","newAddedComment","insertId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\n\n\nconst Post = ({ post, setPosts , posts}) => {\n\n  const [comment, setComment] = useState(\"\");\n\n  const [comments, setComments ]= useState([]);\n\n\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n         setComments(commentsResult.data.result);\n    };\n    getComments();\n  }, []);\n\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n\n  return (\n        <div className=\"post-container\">\n        <div >\n          <div className=\"post-header\">\n          <p>{post.description}</p>\n     \n          {(post.userId == userId || userRole==\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/post/\" + post.postId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredPosts = posts.filter(\n                  (postItem) => postItem.postId !== post.postId\n                );\n                setPosts(filtredPosts);\n              }}>delete</button>}\n          </div>\n               <img className=\"img-post\" src={post.image} />\n        </div>\n        <div>\n    \n        {comments.map((commentItem) => {\n            return   <div className=\"comment-list\">\n                <p>{commentItem.comment}</p>\n                <p>{commentItem.prenom} { commentItem.nom}</p>\n            \n            {(commentItem.userId == userId || userRole===\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/comment/\" + commentItem.commentId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredComments = comments.filter(\n                  (commentElement) => commentElement.commentId !== commentItem.commentId\n                );\n                setComments(filtredComments);\n              }}>delete</button>}\n            </div>\n        })}\n        </div>\n        <div className=\"comment-input\">      \n          <input\n       className=\"inputs-post-commentaire\"\n          placeholder=\"entrer votre commentaire\"\n          onChange={(e) => setComment(e.target.value)}\n        />\n       \n    \n        <button \n         className=\"buttoncommentaire\"\n        disabled={!comment} onClick={async () => {\n            if(comment) {\n                const newComment= await axios.post(\n                 \"http://localhost:4000/api/comment\",\n                 {\n                   comment,\n                   postId: post.postId\n                         },\n                 {\n                   headers: {\n                     authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                   }\n                 }\n               );\n               setComment(\"\")\n               console.log(\"newPost\", newComment.data); \n               const newAddedComment = { comment,commentId: newComment.data.insertId,userId , postId: post.postId, nom: userLastName, prenom: userName};\n\n               setComments([...comments, newAddedComment])\n\n            }\n        }}>commenter</button>\n        </div>\n        <div className=\"vote\">\n\n        <Aimer postId={post.postId} />\n    \n        </div>\n        </div>\n  );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}