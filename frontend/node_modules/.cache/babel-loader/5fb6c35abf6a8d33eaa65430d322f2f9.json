{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\nimport Dislike from \"./Dislike\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post,\n    setPosts,\n    posts\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const [aimer, setAimer] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [dislike, setDislike] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      setComments(commentsResult.data.result);\n    };\n\n    getComments();\n  }, []);\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: 'red',\n          fontSize: ''\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), (post.userId == userId || userRole == \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const result = await axios.delete(\"http://localhost:4000/api/post/\" + post.postId, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            console.log(\"result\", result);\n            const filtredPosts = posts.filter(postItem => postItem.postId !== post.postId);\n            setPosts(filtredPosts);\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        src: post.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(commentItem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: commentItem.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [commentItem.prenom, \" \", commentItem.nom]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), (commentItem.userId == userId || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const result = await axios.delete(\"http://localhost:4000/api/comment/\" + commentItem.commentId, {\n                headers: {\n                  authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                }\n              });\n              console.log(\"result\", result);\n              const filtredComments = comments.filter(commentElement => commentElement.commentId !== commentItem.commentId);\n              setComments(filtredComments);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs-post-commentaire\",\n        placeholder: \"entrer votre commentaire\",\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttoncommentaire\",\n        disabled: !comment,\n        onClick: async () => {\n          if (comment) {\n            const newComment = await axios.post(\"http://localhost:4000/api/comment\", {\n              comment,\n              postId: post.postId\n            }, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            setComment(\"\");\n            console.log(\"newPost\", newComment.data);\n            const newAddedComment = {\n              comment,\n              commentId: newComment.data.insertId,\n              userId,\n              postId: post.postId,\n              nom: userLastName,\n              prenom: userName\n            };\n            setComments([...comments, newAddedComment]);\n          }\n        },\n        children: \"commenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Aimer, {\n        aimer: aimer,\n        setAimer: setAimer,\n        postId: post.postId,\n        isDisabled: !!dislike.find(dislikeItem => Number(dislikeItem.userid) === Number(userId))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dislike, {\n        dislike: dislike,\n        setDislike: setDislike,\n        postId: post.postId,\n        isDisabled: !!aimer.find(aimerItem => Number(aimerItem.userid) === Number(userId))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"CxWYluz0qmVpD+v0FyloQSqE2zw=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx"],"names":["React","useEffect","useState","axios","Aimer","Dislike","Post","post","setPosts","posts","comment","setComment","aimer","setAimer","comments","setComments","dislike","setDislike","getComments","commentsResult","get","postId","headers","authorization","localStorage","getItem","data","result","userId","userName","userLastName","userRole","textAlign","color","fontSize","description","delete","console","log","filtredPosts","filter","postItem","width","height","image","map","commentItem","display","justifyContent","prenom","nom","commentId","filtredComments","commentElement","e","target","value","newComment","newAddedComment","insertId","find","dislikeItem","Number","userid","aimerItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAI,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAmBC,IAAAA;AAAnB,GAA8B;AAE1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAG,YAAY;AAC9B,YAAMC,cAAc,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,qCAAoCb,IAAI,CAACc,MAAO,cAA3D,EAA0E;AACrGC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AAD4F,OAA1E,CAA7B;AAKGV,MAAAA,WAAW,CAACI,cAAc,CAACO,IAAf,CAAoBC,MAArB,CAAX;AACJ,KAPD;;AAQAT,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMU,MAAM,GAAGJ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,QAAMI,QAAQ,GAAGL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AACA,QAAMK,YAAY,GAAGN,YAAY,CAACC,OAAb,CAAqB,UAArB,CAArB;AACA,QAAMM,QAAQ,GAAGP,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AAEA,sBACM;AAAA,4BACA;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,SAAS,EAAC,QAAZ;AAAqBC,UAAAA,KAAK,EAAC,KAA3B;AAAkCC,UAAAA,QAAQ,EAAC;AAA3C,SAAZ;AAAA,gCACA;AAAA,oBAAI3B,IAAI,CAAC4B;AAAT;AAAA;AAAA;AAAA;AAAA,gBADA,EAGC,CAAC5B,IAAI,CAACqB,MAAL,IAAeA,MAAf,IAAyBG,QAAQ,IAAE,OAApC,kBAAgD;AAAQ,UAAA,OAAO,EAAE,YAAY;AACxE,kBAAMJ,MAAM,GAAG,MAAMxB,KAAK,CAACiC,MAAN,CACnB,oCAAoC7B,IAAI,CAACc,MADtB,EAC6B;AAAEC,cAAAA,OAAO,EAAE;AACzDC,gBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADE;AAAX,aAD7B,CAArB;AAMAY,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,MAAtB;AACA,kBAAMY,YAAY,GAAG9B,KAAK,CAAC+B,MAAN,CAClBC,QAAD,IAAcA,QAAQ,CAACpB,MAAT,KAAoBd,IAAI,CAACc,MADpB,CAArB;AAGAb,YAAAA,QAAQ,CAAC+B,YAAD,CAAR;AACD,WAZ4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHjD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBO;AAAK,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAZ;AAA+C,QAAA,GAAG,EAAEpC,IAAI,CAACqC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAlBP;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAqBA;AAAA,gBAEC9B,QAAQ,CAAC+B,GAAT,CAAcC,WAAD,IAAiB;AAC3B,4BAAO;AAAA,kCACP;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACI;AAAA,wBAAIF,WAAW,CAACpC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAIoC,WAAW,CAACG,MAAhB,OAA0BH,WAAW,CAACI,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,EAKN,CAACJ,WAAW,CAAClB,MAAZ,IAAsBA,MAAtB,IAAgCG,QAAQ,KAAG,OAA5C,kBAAwD;AAAQ,YAAA,OAAO,EAAE,YAAY;AAClF,oBAAMJ,MAAM,GAAG,MAAMxB,KAAK,CAACiC,MAAN,CACnB,uCAAuCU,WAAW,CAACK,SADhC,EAC0C;AAAE7B,gBAAAA,OAAO,EAAE;AACtEC,kBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADe;AAAX,eAD1C,CAArB;AAMAY,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,MAAtB;AACA,oBAAMyB,eAAe,GAAGtC,QAAQ,CAAC0B,MAAT,CACrBa,cAAD,IAAoBA,cAAc,CAACF,SAAf,KAA6BL,WAAW,CAACK,SADvC,CAAxB;AAGApC,cAAAA,WAAW,CAACqC,eAAD,CAAX;AACD,aAZsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAmBH,OApBA;AAFD;AAAA;AAAA;AAAA;AAAA,YArBA,eA6CA;AAAK,MAAA,KAAK,EAAE;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE;AACH,QAAA,SAAS,EAAC,yBADP;AAEA,QAAA,WAAW,EAAC,0BAFZ;AAGA,QAAA,QAAQ,EAAGO,CAAD,IAAO3C,UAAU,CAAC2C,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,cADF,eAQA;AACC,QAAA,SAAS,EAAC,mBADX;AAEA,QAAA,QAAQ,EAAE,CAAC9C,OAFX;AAEoB,QAAA,OAAO,EAAE,YAAY;AACrC,cAAGA,OAAH,EAAY;AACR,kBAAM+C,UAAU,GAAE,MAAMtD,KAAK,CAACI,IAAN,CACvB,mCADuB,EAEvB;AACEG,cAAAA,OADF;AAEEW,cAAAA,MAAM,EAAEd,IAAI,CAACc;AAFf,aAFuB,EAMvB;AACEC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADX,aANuB,CAAxB;AAYDd,YAAAA,UAAU,CAAC,EAAD,CAAV;AACA0B,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBmB,UAAU,CAAC/B,IAAlC;AACA,kBAAMgC,eAAe,GAAG;AAAEhD,cAAAA,OAAF;AAAUyC,cAAAA,SAAS,EAAEM,UAAU,CAAC/B,IAAX,CAAgBiC,QAArC;AAA8C/B,cAAAA,MAA9C;AAAuDP,cAAAA,MAAM,EAAEd,IAAI,CAACc,MAApE;AAA4E6B,cAAAA,GAAG,EAAEpB,YAAjF;AAA+FmB,cAAAA,MAAM,EAAEpB;AAAvG,aAAxB;AAEAd,YAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc4C,eAAd,CAAD,CAAX;AAEF;AACJ,SAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CA,eA8EA;AAAA,8BAEA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE9C,KAAd;AAAqB,QAAA,QAAQ,EAAEC,QAA/B;AAAyC,QAAA,MAAM,EAAEN,IAAI,CAACc,MAAtD;AAA8D,QAAA,UAAU,EAAE,CAAC,CAACL,OAAO,CAAC4C,IAAR,CAAcC,WAAD,IAAiBC,MAAM,CAACD,WAAW,CAACE,MAAb,CAAN,KAA+BD,MAAM,CAAClC,MAAD,CAAnE;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEZ,OAAlB;AAA2B,QAAA,UAAU,EAAEC,UAAvC;AAAmD,QAAA,MAAM,EAAEV,IAAI,CAACc,MAAhE;AAAwE,QAAA,UAAU,EAAE,CAAC,CAACT,KAAK,CAACgD,IAAN,CAAYI,SAAD,IAAeF,MAAM,CAACE,SAAS,CAACD,MAAX,CAAN,KAA6BD,MAAM,CAAClC,MAAD,CAA7D;AAAtF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9EA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAsFD,CA/GD;;GAAMtB,I;;KAAAA,I;AAiHN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\nimport Dislike from \"./Dislike\";\n\nconst Post = ({ post, setPosts , posts}) => {\n\n  const [comment, setComment] = useState(\"\");\n  const [aimer, setAimer ]= useState([]);\n  const [comments, setComments ]= useState([]);\n\n  const [dislike, setDislike ]= useState([]);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n         setComments(commentsResult.data.result);\n    };\n    getComments();\n  }, []);\n\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n\n  return (\n        <div>\n        <div >\n          <div style={{ textAlign:'center',color:'red', fontSize:''}}>\n          <p>{post.description}</p>\n     \n          {(post.userId == userId || userRole==\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/post/\" + post.postId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredPosts = posts.filter(\n                  (postItem) => postItem.postId !== post.postId\n                );\n                setPosts(filtredPosts);\n              }}>delete</button>}\n          </div>\n               <img style={{width: \"300px\", height: \"300px\"}} src={post.image} />\n        </div>\n        <div>\n    \n        {comments.map((commentItem) => {\n            return <div>\n            <div style={{ display: \"flex\", justifyContent: 'center'}}>\n                <p>{commentItem.comment}</p>\n                <p>{commentItem.prenom} { commentItem.nom}</p>\n            </div>\n            {(commentItem.userId == userId || userRole===\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/comment/\" + commentItem.commentId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredComments = comments.filter(\n                  (commentElement) => commentElement.commentId !== commentItem.commentId\n                );\n                setComments(filtredComments);\n              }}>delete</button>}\n            </div>\n        })}\n        </div>\n        <div style={{ display: 'flex'}}>      \n          <input\n       className=\"inputs-post-commentaire\"\n          placeholder=\"entrer votre commentaire\"\n          onChange={(e) => setComment(e.target.value)}\n        />\n       \n    \n        <button \n         className=\"buttoncommentaire\"\n        disabled={!comment} onClick={async () => {\n            if(comment) {\n                const newComment= await axios.post(\n                 \"http://localhost:4000/api/comment\",\n                 {\n                   comment,\n                   postId: post.postId\n                         },\n                 {\n                   headers: {\n                     authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                   }\n                 }\n               );\n               setComment(\"\")\n               console.log(\"newPost\", newComment.data); \n               const newAddedComment = { comment,commentId: newComment.data.insertId,userId , postId: post.postId, nom: userLastName, prenom: userName};\n\n               setComments([...comments, newAddedComment])\n\n            }\n        }}>commenter</button>\n        </div>\n        <div>\n\n        <Aimer aimer={aimer} setAimer={setAimer} postId={post.postId} isDisabled={!!dislike.find((dislikeItem) => Number(dislikeItem.userid) === Number(userId))} />\n        <Dislike dislike={dislike} setDislike={setDislike} postId={post.postId} isDisabled={!!aimer.find((aimerItem) => Number(aimerItem.userid) === Number(userId))} />\n        </div>\n        </div>\n  );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}