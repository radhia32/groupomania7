{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/components/Comment.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [comment, setComment] = useState(\"\");\nuseEffect(() => {\n  const getComments = async () => {\n    const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n      headers: {\n        authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n      }\n    });\n    console.log(\"postResult\", commentsResult);\n    setComments(commentsResult.data.result);\n  };\n\n  getComments();\n}, []);\n{\n  comments.map(commentItem => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: commentItem.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [commentItem.prenom, \" \", commentItem.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), (commentItem.userId == userId || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const result = await axios.delete(\"http://localhost:4000/api/comment/\" + commentItem.commentId, {\n            headers: {\n              authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n            }\n          });\n          console.log(\"result\", result);\n          const filtredComments = comments.filter(commentElement => commentElement.commentId !== commentItem.commentId);\n          setComments(filtredComments);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  });\n}\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  style: {\n    display: 'flex'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    placeholder: \"entrer votre commentaire\",\n    onChange: e => setComment(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: !comment,\n    onClick: async () => {\n      if (comment) {\n        const newComment = await axios.post(\"http://localhost:4000/api/comment\", {\n          comment,\n          postId: post.postId\n        }, {\n          headers: {\n            authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n          }\n        });\n        setComment(\"\");\n        console.log(\"newPost\", newComment.data);\n        const newAddedComment = {\n          comment,\n          commentId: newComment.data.insertId,\n          userId,\n          postId: post.postId,\n          nom: userLastName,\n          prenom: userName\n        };\n        setComments([...comments, newAddedComment]);\n      }\n    },\n    children: \"commenter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Aimer, {\n    postId: post.postId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 1\n}, this);\n\nexport default Comment;","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/components/Comment.jsx"],"names":["React","useEffect","useState","axios","Post","comment","setComment","getComments","commentsResult","get","post","postId","headers","authorization","localStorage","getItem","console","log","setComments","data","result","comments","map","commentItem","display","justifyContent","prenom","nom","userId","userRole","delete","commentId","filtredComments","filter","commentElement","e","target","value","newComment","newAddedComment","insertId","userLastName","userName","Comment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\n\nconst [comment, setComment] = useState(\"\");\n\n\nuseEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", commentsResult);\n      setComments(commentsResult.data.result);\n    };\n    getComments();\n  }, []);\n{comments.map((commentItem) => {\n    return <div>\n    <div style={{ display: \"flex\", justifyContent: 'center'}}>\n        <p>{commentItem.comment}</p>\n        <p>{commentItem.prenom} { commentItem.nom}</p>\n    </div>\n    {(commentItem.userId == userId || userRole===\"admin\") && <button onClick={async () => {\n        const result = await axios.delete(\n          \"http://localhost:4000/api/comment/\" + commentItem.commentId,{ headers: {\n            authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n          }}\n        );\n\n        console.log(\"result\", result);\n        const filtredComments = comments.filter(\n          (commentElement) => commentElement.commentId !== commentItem.commentId\n        );\n        setComments(filtredComments);\n      }}>delete</button>}\n    </div>\n})}\n\n\n<div style={{ display: 'flex'}}>      \n<input\nplaceholder=\"entrer votre commentaire\"\nonChange={(e) => setComment(e.target.value)}\n/>\n<button disabled={!comment} onClick={async () => {\n  if(comment) {\n      const newComment= await axios.post(\n       \"http://localhost:4000/api/comment\",\n       {\n         comment,\n         postId: post.postId\n               },\n       {\n         headers: {\n           authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n         }\n       }\n     );\n     setComment(\"\")\n     console.log(\"newPost\", newComment.data); \n     const newAddedComment = { comment,commentId: newComment.data.insertId,userId , postId: post.postId, nom: userLastName, prenom: userName};\n\n     setComments([...comments, newAddedComment])\n\n  }\n}}>commenter</button>\n\n<Aimer postId={post.postId} />\n\n</div>\nexport default Comment;"]},"metadata":{},"sourceType":"module"}