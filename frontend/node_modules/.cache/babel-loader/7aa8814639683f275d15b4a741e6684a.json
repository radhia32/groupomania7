{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\nimport Dislike from \"./Dislike\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post,\n    setPosts,\n    posts\n  } = _ref;\n  const [, setComment] = useState(\"\");\n  const [comcommentments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", commentsResult);\n      setComments(commentsResult.data.result);\n    };\n\n    getComments();\n  }, []);\n  console.log(\"comments\", comments);\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), (post.userId == userId || userRole == \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const result = await axios.delete(\"http://localhost:4000/api/post/\" + post.postId, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            console.log(\"result\", result);\n            const filtredPosts = posts.filter(postItem => postItem.postId !== post.postId);\n            setPosts(filtredPosts);\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        src: post.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(commentItem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: commentItem.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [commentItem.prenom, \" \", commentItem.nom]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), (commentItem.userId == userId || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const result = await axios.delete(\"http://localhost:4000/api/comment/\" + commentItem.commentId, {\n                headers: {\n                  authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                }\n              });\n              console.log(\"result\", result);\n              const filtredComments = comments.filter(commentElement => commentElement.commentId !== commentItem.commentId);\n              setComments(filtredComments);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"entrer votre commentaire\",\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !comment,\n        onClick: async () => {\n          if (comment) {\n            const newComment = await axios.post(\"http://localhost:4000/api/comment\", {\n              comment,\n              postId: post.postId\n            }, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            setComment(\"\");\n            console.log(\"newPost\", newComment.data);\n            const newAddedComment = {\n              comment,\n              commentId: newComment.data.insertId,\n              userId,\n              postId: post.postId,\n              nom: userLastName,\n              prenom: userName\n            };\n            setComments([...comments, newAddedComment]);\n          }\n        },\n        children: \"commenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Aimer, {\n        postId: post.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dislike, {\n        postId: post.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"wLkNz8MVoL6hnFO2JQ/l/RWXygs=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/components/Post.jsx"],"names":["React","useEffect","useState","axios","Aimer","Dislike","Post","post","setPosts","posts","setComment","comcommentments","setComments","getComments","commentsResult","get","postId","headers","authorization","localStorage","getItem","console","log","data","result","comments","userId","userName","userLastName","userRole","display","description","delete","filtredPosts","filter","postItem","width","height","image","map","commentItem","justifyContent","comment","prenom","nom","commentId","filtredComments","commentElement","e","target","value","newComment","newAddedComment","insertId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Aimer from \"./Aimer\";\nimport Dislike from \"./Dislike\";\n\nconst Post = ({ post, setPosts , posts}) => {\n\n  const [, setComment] = useState(\"\");\n\n  const [comcommentments, setComments ]= useState([]);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const commentsResult = await axios.get(`http://localhost:4000/api/comment/${post.postId}/allcomments`, {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", commentsResult);\n      setComments(commentsResult.data.result);\n    };\n    getComments();\n  }, []);\nconsole.log(\"comments\", comments)\n  const userId = localStorage.getItem(\"USERID\");\n  const userName = localStorage.getItem(\"NAME\");\n  const userLastName = localStorage.getItem(\"LASTNAME\");\n  const userRole = localStorage.getItem(\"ROLE\");\n  return (\n        <div>\n        <div >\n          <div style={{ display: 'flex'}}>\n          <p>{post.description}</p>\n     \n          {(post.userId == userId || userRole==\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/post/\" + post.postId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredPosts = posts.filter(\n                  (postItem) => postItem.postId !== post.postId\n                );\n                setPosts(filtredPosts);\n              }}>delete</button>}\n          </div>\n               <img style={{width: \"300px\", height: \"300px\"}} src={post.image} />\n        </div>\n        <div>\n    \n        {comments.map((commentItem) => {\n            return <div>\n            <div style={{ display: \"flex\", justifyContent: 'center'}}>\n                <p>{commentItem.comment}</p>\n                <p>{commentItem.prenom} { commentItem.nom}</p>\n            </div>\n            {(commentItem.userId == userId || userRole===\"admin\") && <button onClick={async () => {\n                const result = await axios.delete(\n                  \"http://localhost:4000/api/comment/\" + commentItem.commentId,{ headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }}\n                );\n\n                console.log(\"result\", result);\n                const filtredComments = comments.filter(\n                  (commentElement) => commentElement.commentId !== commentItem.commentId\n                );\n                setComments(filtredComments);\n              }}>delete</button>}\n            </div>\n        })}\n        </div>\n        <div style={{ display: 'flex'}}>      \n          <input\n          placeholder=\"entrer votre commentaire\"\n          onChange={(e) => setComment(e.target.value)}\n        />\n    \n        <button disabled={!comment} onClick={async () => {\n            if(comment) {\n                const newComment= await axios.post(\n                 \"http://localhost:4000/api/comment\",\n                 {\n                   comment,\n                   postId: post.postId\n                         },\n                 {\n                   headers: {\n                     authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                   }\n                 }\n               );\n               setComment(\"\")\n               console.log(\"newPost\", newComment.data); \n               const newAddedComment = { comment,commentId: newComment.data.insertId,userId , postId: post.postId, nom: userLastName, prenom: userName};\n\n               setComments([...comments, newAddedComment])\n\n            }\n        }}>commenter</button>\n        </div>\n        <div>\n\n        <Aimer postId={post.postId} />\n        <Dislike postId={post.postId} />\n        </div>\n        </div>\n  );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}