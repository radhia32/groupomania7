{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/pages/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from '../components/Post';\nimport Header from '../components/Header';\nimport Auth from \"../components/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const postsResult = await axios.get(\"http://localhost:4000/api/post\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      setPosts(postsResult.data.result);\n    };\n\n    getPosts();\n  }, []);\n\n  const onChangeImage = e => setFile(e.target.files[0]);\n\n  const userId = localStorage.getItem(\"USERID\");\n\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputForm\",\n          placeholder: \"entrer votre nouvelle publication\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onChangeImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-button\",\n        onClick: async () => {\n          if (description) {\n            const formData = new FormData();\n            formData.append('description', description);\n            formData.append('file', file);\n            const newPost = await axios.post(\"http://localhost:4000/api/post\", formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            }); // creation d'un objet dedans j'ai mis la description saisie et l'id de la\n            // nouvelle pub ajoutée, cet objet sera ajouter dans le tableau posts\n            // pour l'affiché avec tous les publication\n\n            const newAddedPost = {\n              description,\n              postId: newPost.data.post.insertId,\n              userId,\n              image: 'http://localhost:4000/images/' + file.name\n            };\n            setPosts([newAddedPost, ...posts]);\n            setDescription(\"\");\n            seF; // ajouter le nouveau element ajouté dans le tableau\n            // ajout d'un nouveau element dans un tableau [...prevTable, newAddedElement]\n          }\n        },\n        children: \"partager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"dgyqDJjXe/3MWjqVFiwTya6BYXc=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/pages/Posts.jsx"],"names":["React","useEffect","useState","axios","Post","Header","Auth","Posts","posts","setPosts","file","setFile","description","setDescription","getPosts","postsResult","get","headers","authorization","localStorage","getItem","data","result","onChangeImage","e","target","files","userId","value","formData","FormData","append","newPost","post","newAddedPost","postId","insertId","image","name","seF","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from '../components/Post';\nimport Header from '../components/Header';\nimport Auth from \"../components/Auth\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const postsResult = await axios.get(\"http://localhost:4000/api/post\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      setPosts(postsResult.data.result);\n    };\n    getPosts();\n  }, []);\n\n  const onChangeImage = (e) => setFile(e.target.files[0]);\n\n  const userId = localStorage.getItem(\"USERID\");\n  if(!userId) {\n    return <Auth />\n  }\n  return (\n    <div>\n      <Header />\n      <div>\n        <div className=\"inputs-post-container\">\n        <input\n          className='inputForm'\n          placeholder=\"entrer votre nouvelle publication\"\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        \n           <input type={\"file\"}\n            onChange={onChangeImage}\n   />\n        </div>\n        <button\n        className=\"share-button\"\n          onClick={async () => {\n            if (description) {\n              const formData = new FormData();\n              formData.append('description', description);\n              formData.append('file', file);\n              const newPost = await axios.post(\n                \"http://localhost:4000/api/post\",\n             formData,\n                {\n                  headers: {\n                    'Content-Type': 'multipart/form-data',\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }\n                }\n              );\n      \n              // creation d'un objet dedans j'ai mis la description saisie et l'id de la\n              // nouvelle pub ajoutée, cet objet sera ajouter dans le tableau posts\n              // pour l'affiché avec tous les publication\n              const newAddedPost = { description,postId: newPost.data.post.insertId,userId, image: 'http://localhost:4000/images/' + file.name };\n\n              setPosts([newAddedPost, ...posts]);\n              setDescription(\"\");\n              seF\n              // ajouter le nouveau element ajouté dans le tableau\n              // ajout d'un nouveau element dans un tableau [...prevTable, newAddedElement]\n            }\n          }}\n        >\n          partager\n        </button>\n      </div>\n      {posts?.map((post) => (\n        <Post post={post} posts={posts} setPosts={setPosts}/>\n\n      ))}\n    </div>\n  );\n};\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}