{"ast":null,"code":"var _jsxFileName = \"/Users/zrt/Documents/groupomania7/frontend/src/pages/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const postsResult = await axios.get(\"http://localhost:4000/api/post\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", postsResult);\n      setPosts(postsResult.data.result);\n    };\n\n    getPosts();\n  }, []);\n  const userId = localStorage.getItem(\"USERID\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"entrer votre nouvelle publication\",\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (description) {\n            const newPost = await axios.post(\"http://localhost:4000/api/post\", {\n              description\n            }, {\n              headers: {\n                authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n              }\n            });\n            console.log(\"newPost\", newPost.data); // creation d'un objet dedans on a mis la description saisie et l'id de la\n            // nouvelle pub ajoutée, cet objet sera ajouter dans le tableau posts\n            // pour l'affiché avec tous les publication\n\n            const newAddedPost = {\n              description,\n              postId: newPost.data.post.insertId,\n              userId\n            };\n            setPosts([...posts, newAddedPost]);\n            setDescription(\"\"); // ajouter le nouveau element ajouté dans le tableau\n            // ajout d'un nouveau element dans un tableau [...prevTable, newAddedElement]\n          }\n        },\n        children: \"partager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"mLtplxdNig+63uJzd2P30c9ZQ9k=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/zrt/Documents/groupomania7/frontend/src/pages/Posts.jsx"],"names":["React","useEffect","useState","axios","Post","Posts","posts","setPosts","description","setDescription","getPosts","postsResult","get","headers","authorization","localStorage","getItem","console","log","data","result","userId","e","target","value","newPost","post","newAddedPost","postId","insertId","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,WAAW,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,gCAAV,EAA4C;AACpEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AAD2D,OAA5C,CAA1B;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,WAA1B;AACAJ,MAAAA,QAAQ,CAACI,WAAW,CAACQ,IAAZ,CAAiBC,MAAlB,CAAR;AACD,KARD;;AASAV,IAAAA,QAAQ;AACT,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMW,MAAM,GAAGN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,mCADd;AAEE,QAAA,QAAQ,EAAGM,CAAD,IAAOb,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,OAAO,EAAE,YAAY;AACnB,cAAIhB,WAAJ,EAAiB;AACf,kBAAMiB,OAAO,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CACpB,gCADoB,EAEpB;AACElB,cAAAA;AADF,aAFoB,EAKpB;AACEK,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADX,aALoB,CAAtB;AAWAC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,OAAO,CAACN,IAA/B,EAZe,CAaf;AACA;AACA;;AACA,kBAAMQ,YAAY,GAAG;AAAEnB,cAAAA,WAAF;AAAcoB,cAAAA,MAAM,EAAEH,OAAO,CAACN,IAAR,CAAaO,IAAb,CAAkBG,QAAxC;AAAiDR,cAAAA;AAAjD,aAArB;AAEAd,YAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWqB,YAAX,CAAD,CAAR;AACAlB,YAAAA,cAAc,CAAC,EAAD,CAAd,CAnBe,CAoBf;AACA;AACD;AACF,SAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAoCGH,KApCH,aAoCGA,KApCH,uBAoCGA,KAAK,CAAEwB,GAAP,CAAYJ,IAAD,iBACV,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,KAAK,EAAEpB,KAAzB;AAAgC,MAAA,QAAQ,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADD,CApCH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA5DD;;GAAMF,K;;KAAAA,K;AA8DN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from '../components/Post';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const postsResult = await axios.get(\"http://localhost:4000/api/post\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n        }\n      });\n      console.log(\"postResult\", postsResult);\n      setPosts(postsResult.data.result);\n    };\n    getPosts();\n  }, []);\n\n  const userId = localStorage.getItem(\"USERID\");\n  return (\n    <div className=\"app\">\n      <div>\n        <input\n          placeholder=\"entrer votre nouvelle publication\"\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button\n          onClick={async () => {\n            if (description) {\n              const newPost = await axios.post(\n                \"http://localhost:4000/api/post\",\n                {\n                  description\n                },\n                {\n                  headers: {\n                    authorization: `bearer ${localStorage.getItem(\"TOKEN\")}`\n                  }\n                }\n              );\n              console.log(\"newPost\", newPost.data);\n              // creation d'un objet dedans on a mis la description saisie et l'id de la\n              // nouvelle pub ajoutée, cet objet sera ajouter dans le tableau posts\n              // pour l'affiché avec tous les publication\n              const newAddedPost = { description,postId: newPost.data.post.insertId,userId };\n\n              setPosts([...posts, newAddedPost]);\n              setDescription(\"\");\n              // ajouter le nouveau element ajouté dans le tableau\n              // ajout d'un nouveau element dans un tableau [...prevTable, newAddedElement]\n            }\n          }}\n        >\n          partager\n        </button>\n      </div>\n      {posts?.map((post) => (\n        <Post post={post} posts={posts} setPosts={setPosts}/>\n\n      ))}\n    </div>\n  );\n};\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}